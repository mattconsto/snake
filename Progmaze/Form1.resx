<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picCanvas.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>110</value>
  </metadata>
</root>